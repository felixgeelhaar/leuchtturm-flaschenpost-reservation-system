---
import Layout from '@/layouts/Layout.astro';
import ReservationForm from '@/components/ReservationForm.vue';
import ConsentBanner from '@/components/ConsentBanner.vue';
import ErrorBoundary from '@/components/ErrorBoundary.vue';
import { DatabaseService } from '@/lib/database';
import { kindergarten, magazine, homepage, faq, images, getFormattedPrice, getTotalPrice } from '@/config/content';

// Fetch magazines on the server
const db = new DatabaseService();
let magazines = [];

try {
  magazines = await db.getActiveMagazines();
} catch (error) {
  console.error('Failed to load magazines:', error);
  // Continue with empty array - component will handle the error state
}

const totalPrice = getTotalPrice();
---

<Layout 
  title={`${magazine.title} reservieren - ${kindergarten.name}`}
  description={magazine.currentIssue.description}
>
  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-primary-50 to-secondary-50 py-12 sm:py-16 lg:py-20 overflow-hidden">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
        <!-- Content -->
        <div class="text-center lg:text-left">
          <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-neutral-900 mb-6">
            {homepage.hero.headline}
          </h1>
          <p class="text-xl sm:text-2xl text-neutral-600 mb-8 leading-relaxed">
            {homepage.hero.subheadline}
          </p>
          {homepage.hero.badge && (
            <div class="inline-block px-4 py-2 bg-primary-100 text-primary-800 rounded-full text-sm font-medium mb-6">
              {homepage.hero.badge}
            </div>
          )}
          <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
            <a 
              href="#reservation-form" 
              class="btn-primary btn-lg w-full sm:w-auto"
              onclick="document.getElementById('reservation-form').scrollIntoView({ behavior: 'smooth' })"
            >
              {homepage.hero.ctaText}
            </a>
            <a 
              href="#about-magazine" 
              class="btn-outline btn-lg w-full sm:w-auto"
            >
              Mehr erfahren
            </a>
          </div>
        </div>
        
        <!-- Hero Image -->
        <div class="relative">
          <img 
            src={images.heroImage}
            alt={`${magazine.title} Magazin`}
            class="rounded-lg shadow-xl w-full h-auto"
            width="600"
            height="400"
            loading="eager"
          />
          <!-- Optional: Add magazine cover as overlay -->
          {images.magazineCover && (
            <div class="absolute -bottom-6 -right-6 w-32 lg:w-40">
              <img 
                src={images.magazineCover}
                alt={`${magazine.title} Cover`}
                class="rounded-lg shadow-lg transform rotate-3 hover:rotate-0 transition-transform duration-300"
                width="160"
                height="226"
                loading="eager"
              />
            </div>
          )}
        </div>
      </div>
    </div>
  </section>

  <!-- About Section -->
  <section id="about-magazine" class="py-16 lg:py-20 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-3xl sm:text-4xl font-bold text-neutral-900 mb-4">
          {homepage.about.title}
        </h2>
        <p class="text-xl text-neutral-600 max-w-3xl mx-auto">
          {homepage.about.description}
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {homepage.about.features.map((feature) => (
          <div class="text-center">
            <div class="w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="h-8 w-8 text-primary-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
              </svg>
            </div>
            <h3 class="text-lg font-semibold text-neutral-900 mb-2">
              {feature.title}
            </h3>
            <p class="text-neutral-600">
              {feature.description}
            </p>
          </div>
        ))}
      </div>
      
      <!-- Magazine Details -->
      <div class="mt-16 p-8 bg-neutral-50 rounded-lg">
        <h3 class="text-2xl font-bold text-neutral-900 mb-6">
          {magazine.title} - {magazine.currentIssue.issueNumber}
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div>
            <h4 class="font-semibold text-neutral-900 mb-2">Inhalt dieser Ausgabe:</h4>
            <ul class="space-y-2">
              {magazine.currentIssue.contents.map((content) => (
                <li class="flex items-start space-x-2">
                  <svg class="h-5 w-5 text-primary-600 mt-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span class="text-neutral-600">{content}</span>
                </li>
              ))}
            </ul>
          </div>
          <div class="space-y-3">
            <div>
              <span class="font-semibold text-neutral-900">Format:</span>
              <span class="ml-2 text-neutral-600">{magazine.currentIssue.format}, {magazine.currentIssue.pageCount} Seiten</span>
            </div>
            <div>
              <span class="font-semibold text-neutral-900">Papier:</span>
              <span class="ml-2 text-neutral-600">{magazine.currentIssue.paperWeight}</span>
            </div>
            <div>
              <span class="font-semibold text-neutral-900">Erscheinungsdatum:</span>
              <span class="ml-2 text-neutral-600">{magazine.currentIssue.publicationDate}</span>
            </div>
            <div class="pt-4 border-t border-neutral-200">
              <div class="text-2xl font-bold text-primary-600">
                {getFormattedPrice(totalPrice)}
              </div>
              <div class="text-sm text-neutral-600 mt-1">
                inkl. Versandkostenpauschale
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Process Section -->
  <section class="py-16 lg:py-20 bg-neutral-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-3xl sm:text-4xl font-bold text-neutral-900 mb-4">
          {homepage.process.title}
        </h2>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {homepage.process.steps.map((step) => (
          <div class="relative">
            <div class="text-center">
              <div class="w-16 h-16 bg-primary-600 text-white rounded-full flex items-center justify-center mx-auto mb-4 text-2xl font-bold">
                {step.number}
              </div>
              <h3 class="text-xl font-semibold text-neutral-900 mb-2">
                {step.title}
              </h3>
              <p class="text-neutral-600">
                {step.description}
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>
  

  <!-- Reservation Form Section -->
  <section id="reservation-form" class="py-16 lg:py-20 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-3xl sm:text-4xl font-bold text-neutral-900 mb-4">
          Ihr Exemplar reservieren
        </h2>
        <p class="text-xl text-neutral-600 max-w-2xl mx-auto">
          Füllen Sie das Formular aus, um Ihr Exemplar des {magazine.title} Magazins zu reservieren.
        </p>
      </div>
      
      <ErrorBoundary client:load>
        <ReservationForm 
          client:load 
          magazines={magazines}
          transition:persist
        />
      </ErrorBoundary>
    </div>
  </section>

  <!-- FAQ Section -->
  <section class="py-16 lg:py-20 bg-neutral-50">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-3xl sm:text-4xl font-bold text-neutral-900 mb-4">
          Häufige Fragen
        </h2>
        <p class="text-xl text-neutral-600">
          Antworten auf die wichtigsten Fragen zur Reservierung
        </p>
      </div>
      
      <div class="space-y-6">
        {faq.map((item) => (
          <details class="card p-6">
            <summary class="font-semibold text-lg text-neutral-900 cursor-pointer hover:text-primary-600 transition-colors">
              {item.question}
            </summary>
            <div class="mt-4 text-neutral-600">
              <p>{item.answer}</p>
            </div>
          </details>
        ))}
      </div>
    </div>
  </section>

  <!-- Info Section -->
  <section class="py-12 bg-white border-t border-neutral-200">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <div class="space-y-2">
          <div class="text-2xl font-bold text-primary-600">DSGVO Konform</div>
          <div class="text-sm text-neutral-600">Ihre Daten sind bei uns sicher</div>
        </div>
      </div>
    </div>
  </section>

  <!-- GDPR Consent Banner -->
  <ConsentBanner 
    client:idle
    isVisible={true}
  />
</Layout>

<style>
  /* Line clamp utility for magazine descriptions */
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Smooth scrolling for anchor links */
  html {
    scroll-behavior: smooth;
  }
  
  /* Details/summary styling */
  details > summary {
    list-style: none;
  }
  
  details > summary::before {
    content: '+';
    display: inline-block;
    width: 1em;
    margin-right: 0.5em;
    transition: transform 0.2s ease;
  }
  
  details[open] > summary::before {
    transform: rotate(45deg);
  }
  
  details > summary::-webkit-details-marker {
    display: none;
  }
</style>

<script>
  // Enhanced scroll behavior for better UX
  document.addEventListener('DOMContentLoaded', () => {
    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
    
    // Add scroll spy for navigation
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('nav a[href^="#"]');
    
    function updateActiveNav() {
      let current = '';
      sections.forEach(section => {
        const sectionTop = section.offsetTop;
        if (pageYOffset >= sectionTop - 60) {
          current = section.getAttribute('id');
        }
      });
      
      navLinks.forEach(link => {
        link.classList.remove('active');
        if (link.getAttribute('href').substring(1) === current) {
          link.classList.add('active');
        }
      });
    }
    
    window.addEventListener('scroll', updateActiveNav);
  });
</script>